label {

  &:has(input[type="radio"]),
  &:has(input[type="checkbox"]) {
    display: flex;
    align-items: center;
    gap: .5em;

  }

  &:has(input[type="radio"]:disabled),
  &:has(input[type='checkbox']:disabled) {
    opacity: .5;
    pointer-events: none;
  }
}

input[type="radio"],
input[type="checkbox"] {
  appearance: none;
  -webkit-appearance: none;
  padding: 0;
  width: 2em;
  height: 2em;
  border-radius: .5em;
  transition: box-shadow .3s;
  background: var(--bgCheckbox);
  border: .1em solid var(--bcCheckbox);
  cursor: pointer;
  position: relative;

  &::after {
    content: "";
    width: 1em;
    height: .5em;
    border: .2em solid transparent;
    border-top: none;
    border-right: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -80%) rotate(-45deg);
  }

  &:hover {
    background-color: var(--bgCheckboxHover);
  }

  &:checked {
    border-color: var(--markCheckboxChecked);
    background-color: var(--bgCheckboxChecked);

    &::after {
      border-color: var(--markCheckboxChecked);
    }
  }


  // Switch

  &[role='switch'] {
    width: 3.5em;
    border-radius: 3em;

    &::after {
      all: unset;
      content: "";
      width: 1.5em;
      height: 1.5em;
      border-radius: 1em;
      background-color: var(--bgSwitchMark);
      position: absolute;
      top: 50%;
      left: .2em;
      transform: translate(0, -50%);
      transition: var(--transitionDuration) var(--transitionFunction);
      transition-property: left, background-color;
    }

    &:checked {
      &::after {
        left: calc(100% - 1.7em);
        background-color: var(--bgSwitchMarkActive);
      }
    }
  }
}

input[type="radio"] {
  border-radius: 10em;

  &::after {
    content: "";
    width: 1em;
    height: 1em;
    border-radius: 10em;
    background-color: var(--bgInput);
    position: absolute;
    transform: translate(-50%, -50%);
    transition: var(--transitionDuration) var(--transitionFunction);
    background-color: var(--bgRadioMarkActive);
  }

  &:not(:checked) {
    &::after {
      opacity: 0;
    }
  }
}